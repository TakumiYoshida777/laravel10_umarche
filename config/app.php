<?php

use Illuminate\Support\Facades\Facade;
use Illuminate\Support\ServiceProvider;

return [

    /*
    |--------------------------------------------------------------------------
    | アプリケーション名
    |--------------------------------------------------------------------------
    |
    | この値はアプリケーションの名前です。この値は、フレームワークが通知や
    | アプリケーションまたはそのパッケージに必要な他の場所にアプリケーションの名前を配置する必要がある場合に使用されます。
    |
    */

    'name' => env('APP_NAME', 'Laravel'),

    /*
    |--------------------------------------------------------------------------
    | アプリケーション環境
    |--------------------------------------------------------------------------
    |
    | この値は、アプリケーションが現在実行されている「環境」を決定します。
    | これにより、アプリケーションが利用するさまざまなサービスをどのように構成するかを決定することができます。
    | これは「.env」ファイルで設定してください。
    |
    */

    'env' => env('APP_ENV', 'production'),

    /*
    |--------------------------------------------------------------------------
    | アプリケーションデバッグモード
    |--------------------------------------------------------------------------
    |
    | アプリケーションがデバッグモードにある場合、詳細なエラーメッセージと
    | スタックトレースが発生したエラーごとに表示されます。
    | 無効にすると、シンプルな汎用エラーページが表示されます。
    |
    */

    'debug' => (bool) env('APP_DEBUG', false),

    /*
    |--------------------------------------------------------------------------
    | アプリケーションURL
    |--------------------------------------------------------------------------
    |
    | このURLは、Artisanコマンドラインツールを使用してURLを適切に生成するために
    | コンソールで使用されます。アプリケーションのルートに設定してください。
    |
    */

    'url' => env('APP_URL', 'http://localhost'),

    'asset_url' => env('ASSET_URL'),

    /*
    |--------------------------------------------------------------------------
    | アプリケーションタイムゾーン
    |--------------------------------------------------------------------------
    |
    | ここで、PHPの日付および日時関数で使用されるデフォルトのタイムゾーンを指定できます。
    | これは、デフォルトで合理的な値に設定されています。
    |
    */

    'timezone' => 'Asia/Tokyo',

    /*
    |--------------------------------------------------------------------------
    | アプリケーションロケール構成
    |--------------------------------------------------------------------------
    |
    | アプリケーションロケールは、翻訳サービスプロバイダで使用されるデフォルトのロケールを決定します。
    | アプリケーションでサポートされるロケールのいずれかにこの値を設定できます。
    |
    */

    'locale' => 'ja',

    /*
    |--------------------------------------------------------------------------
    | アプリケーションフォールバックロケール
    |--------------------------------------------------------------------------
    |
    | フォールバックロケールは、現在のロケールが利用できない場合に使用するロケールを決定します。
    | この値を、アプリケーションを介して提供される言語フォルダのいずれかに対応する値に変更できます。
    |
    */

    'fallback_locale' => 'en',

    /*
    |--------------------------------------------------------------------------
    | Fakerロケール
    |--------------------------------------------------------------------------
    |
    | このロケールは、Faker PHPライブラリがデータベースシードの偽のデータを生成する際に使用されます。
    | たとえば、これは、地域化された電話番号、住所情報などを取得するために使用されます。
    |
    */

    'faker_locale' => 'ja_JP',

    /*
    |--------------------------------------------------------------------------
    | 暗号化キー
    |--------------------------------------------------------------------------
    |
    | このキーはIlluminate暗号化サービスによって使用され、ランダムな32文字の文字列に設定する必要があります。
    | そうしないと、これらの暗号化された文字列は安全ではありません。
    | アプリケーションを展開する前に、必ず行ってください！
    |
    */

    'key' => env('APP_KEY'),

    'cipher' => 'AES-256-CBC',

    /*
    |--------------------------------------------------------------------------
    | メンテナンスモードドライバ
    |--------------------------------------------------------------------------
    |
    | これらの構成オプションは、Laravelの「メンテナンスモード」ステータスを決定および管理するために使用されるドライバを決定します。
    | 「cache」ドライバを使用すると、メンテナンスモードを複数のマシンで制御できます。
    |
    | サポートされているドライバ:「file」、「cache」
    |
    */

    'maintenance' => [
        'driver' => 'file',
        // 'store' => 'redis',
    ],

    /*
    |--------------------------------------------------------------------------
    | 自動読み込みサービスプロバイダ
    |--------------------------------------------------------------------------
    |
    | ここにリクエスト時に自動的に読み込まれるサービスプロバイダがリストされます。
    | アプリケーションに拡張機能を付与するために、この配列に独自のサービスを追加してください。
    |
    */

    'providers' => ServiceProvider::defaultProviders()->merge([
        /*
         * パッケージサービスプロバイダ...
         */
        Intervention\Image\ImageServiceProvider::class,

        /*
         * アプリケーションサービスプロバイダ...
         */
        App\Providers\AppServiceProvider::class,
        App\Providers\AuthServiceProvider::class,
        // App\Providers\BroadcastServiceProvider::class,
        App\Providers\EventServiceProvider::class,
        App\Providers\RouteServiceProvider::class,
        App\Providers\SampleServiceProvider::class, // 追加
    ])->toArray(),

    /*
    |--------------------------------------------------------------------------
    | クラスエイリアス
    |--------------------------------------------------------------------------
    |
    | このクラスエイリアスの配列は、このアプリケーションが開始されるときに登録されます。
    | ただし、エイリアスは「遅延」ロードされるため、パフォーマンスに支障をきたしません。
    |
    */

    'aliases' => Facade::defaultAliases()->merge([
        // 'Example' => App\Facades\Example::class,
        'InterventionImage' => Intervention\Image\Facades\Image::class

    ])->toArray(),

];

